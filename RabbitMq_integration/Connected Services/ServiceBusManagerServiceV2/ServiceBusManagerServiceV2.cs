//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RabbitMq_integration.ServiceBusManagerServiceV2
{
    using System.Runtime.Serialization;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SubscriptionEventSource", Namespace="http://schemas.nhn.no/reg/serviceBusManagerV2")]
    public enum SubscriptionEventSource : int
    {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AddressRegister = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Resh = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Hpr = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lsr = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Cppa = 4,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventSubscription", Namespace="http://schemas.nhn.no/reg/serviceBusManagerV2")]
    public partial class EventSubscription : object
    {
        
        private string EventNameField;
        
        private RabbitMq_integration.ServiceBusManagerServiceV2.SubscriptionEventSource EventSourceField;
        
        private string QueueNameField;
        
        private string UserSystemIdentField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EventName
        {
            get
            {
                return this.EventNameField;
            }
            set
            {
                this.EventNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public RabbitMq_integration.ServiceBusManagerServiceV2.SubscriptionEventSource EventSource
        {
            get
            {
                return this.EventSourceField;
            }
            set
            {
                this.EventSourceField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QueueName
        {
            get
            {
                return this.QueueNameField;
            }
            set
            {
                this.QueueNameField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserSystemIdent
        {
            get
            {
                return this.UserSystemIdentField;
            }
            set
            {
                this.UserSystemIdentField = value;
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GenericFault", Namespace="http://register.nhn.no/Common")]
    public partial class GenericFault : object
    {
        
        private string ErrorCodeField;
        
        private string MessageField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorCode
        {
            get
            {
                return this.ErrorCodeField;
            }
            set
            {
                this.ErrorCodeField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message
        {
            get
            {
                return this.MessageField;
            }
            set
            {
                this.MessageField = value;
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://schemas.nhn.no/reg/serviceBusManagerV2", ConfigurationName="RabbitMq_integration.ServiceBusManagerServiceV2.IServiceBusManagerV2")]
    public interface IServiceBusManagerV2
    {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/Subscribe", ReplyAction="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/SubscribeRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RabbitMq_integration.ServiceBusManagerServiceV2.GenericFault), Action="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/SubscribeGener" +
            "icFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        System.Threading.Tasks.Task<RabbitMq_integration.ServiceBusManagerServiceV2.EventSubscription> SubscribeAsync(RabbitMq_integration.ServiceBusManagerServiceV2.SubscriptionEventSource eventSource, string eventName, string userSystemIdent);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/Unsubscribe", ReplyAction="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/UnsubscribeRes" +
            "ponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RabbitMq_integration.ServiceBusManagerServiceV2.GenericFault), Action="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/UnsubscribeGen" +
            "ericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        System.Threading.Tasks.Task UnsubscribeAsync(string queueName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/GetSubscriptio" +
            "ns", ReplyAction="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/GetSubscriptio" +
            "nsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(RabbitMq_integration.ServiceBusManagerServiceV2.GenericFault), Action="http://schemas.nhn.no/reg/serviceBusManagerV2/IServiceBusManagerV2/GetSubscriptio" +
            "nsGenericFaultFault", Name="GenericFault", Namespace="http://register.nhn.no/Common")]
        System.Threading.Tasks.Task<RabbitMq_integration.ServiceBusManagerServiceV2.EventSubscription[]> GetSubscriptionsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public interface IServiceBusManagerV2Channel : RabbitMq_integration.ServiceBusManagerServiceV2.IServiceBusManagerV2, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    public partial class ServiceBusManagerV2Client : System.ServiceModel.ClientBase<RabbitMq_integration.ServiceBusManagerServiceV2.IServiceBusManagerV2>, RabbitMq_integration.ServiceBusManagerServiceV2.IServiceBusManagerV2
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public ServiceBusManagerV2Client(EndpointConfiguration endpointConfiguration) : 
                base(ServiceBusManagerV2Client.GetBindingForEndpoint(endpointConfiguration), ServiceBusManagerV2Client.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBusManagerV2Client(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(ServiceBusManagerV2Client.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBusManagerV2Client(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(ServiceBusManagerV2Client.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public ServiceBusManagerV2Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        public System.Threading.Tasks.Task<RabbitMq_integration.ServiceBusManagerServiceV2.EventSubscription> SubscribeAsync(RabbitMq_integration.ServiceBusManagerServiceV2.SubscriptionEventSource eventSource, string eventName, string userSystemIdent)
        {
            return base.Channel.SubscribeAsync(eventSource, eventName, userSystemIdent);
        }
        
        public System.Threading.Tasks.Task UnsubscribeAsync(string queueName)
        {
            return base.Channel.UnsubscribeAsync(queueName);
        }
        
        public System.Threading.Tasks.Task<RabbitMq_integration.ServiceBusManagerServiceV2.EventSubscription[]> GetSubscriptionsAsync()
        {
            return base.Channel.GetSubscriptionsAsync();
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IServiceBusManagerV2))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                httpsBindingElement.AuthenticationScheme = System.Net.AuthenticationSchemes.Basic;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IServiceBusManagerV2))
            {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.Security.Mode = System.ServiceModel.SecurityMode.TransportWithMessageCredential;
                result.Security.Message.ClientCredentialType = System.ServiceModel.MessageCredentialType.UserName;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceBusManagerV2))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                result.Security.Transport.ClientCredentialType = System.ServiceModel.HttpClientCredentialType.Basic;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.WSHttpBinding_IServiceBusManagerV2))
            {
                return new System.ServiceModel.EndpointAddress("https://register-web.test.nhn.no/v2/servicebusmanager");
            }
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_IServiceBusManagerV2))
            {
                return new System.ServiceModel.EndpointAddress(new System.Uri("net.tcp://ws-web.test.nhn.no:9876/v2/servicebusmanager"), new System.ServiceModel.DnsEndpointIdentity("ws-web.test.nhn.no"));
            }
            if ((endpointConfiguration == EndpointConfiguration.BasicHttpBinding_IServiceBusManagerV2))
            {
                return new System.ServiceModel.EndpointAddress("https://register-web.test.nhn.no/v2/servicebusmanager/Basic");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            WSHttpBinding_IServiceBusManagerV2,
            
            NetTcpBinding_IServiceBusManagerV2,
            
            BasicHttpBinding_IServiceBusManagerV2,
        }
    }
}
